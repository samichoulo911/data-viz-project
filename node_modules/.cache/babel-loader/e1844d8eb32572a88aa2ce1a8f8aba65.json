{"remainingRequest":"/home/sam/Documents/Poly/data-viz-project/node_modules/babel-loader/lib/index.js!/home/sam/Documents/Poly/data-viz-project/node_modules/eslint-loader/index.js??ref--13-0!/home/sam/Documents/Poly/data-viz-project/src/preprocess.js","dependencies":[{"path":"/home/sam/Documents/Poly/data-viz-project/src/preprocess.js","mtime":1624326781000},{"path":"/home/sam/Documents/Poly/data-viz-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sam/Documents/Poly/data-viz-project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/sam/Documents/Poly/data-viz-project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/sam/Documents/Poly/data-viz-project/src/preprocess.js"],"names":["d3","cleanPlayerNames","data","element","PlayerName","slice","indexOf","getPlayersWithMostGoals","playerCount","sort","first","second","Goals","mergeSeasons","nanAttributes","attributesToKeep","attributesToKeepAndAdd","mergedData","Map","value","cleanedUpValue","attr","concat","stat","isNaN","has","Season","set","currentStat","get","mergedSeason","Array","from","map","key","computeDerivedStats","season","getLiguaStats","standardStatsFilename","window","location","origin","shootingStatsFilename","passingStatsFilename","csv","standardStats","shootingStats","passingStats","playerStandardStats","playerShootingStats","find","playerPassingStats","push","Object","assign","topScoringPlayers","getBenzemaHistoricalStats","mergedStats","i","length","mergedSeasons","getGiroudHistoricalStats"],"mappings":"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","sourcesContent":["import * as d3 from 'd3'\n\nfunction cleanPlayerNames(data) {\n    for (const element of data) {\n        element.PlayerName = element.PlayerName.slice(0, element.PlayerName.indexOf('\\\\'));\n    }\n}\n\nfunction getPlayersWithMostGoals(data, playerCount) {\n    return data.sort((first, second) => {\n        return second.Goals - first.Goals;\n    }).slice(0, playerCount);\n}\n\nfunction mergeSeasons(data) {\n    const nanAttributes = ['Season'];\n    const attributesToKeep = ['Age'];\n    const attributesToKeepAndAdd = [\n        'RedCards',\n        'YellowCards',\n        'MatchPlayed',\n        'Goals',\n        'Shots',\n        'ShotsOnTarget',\n        'FreeKicks',\n        'Assists',\n        'AssistedShot',\n        'PassAttempted',\n        'PassCompleted',\n        'MinutesPlayed'\n    ];\n    \n    const mergedData = new Map();\n    for (const value of data) {\n        let cleanedUpValue = {};\n\n        for (const attr of nanAttributes) {\n            cleanedUpValue[attr] = value[attr];\n        }\n        \n        for (const attr of attributesToKeep.concat(attributesToKeepAndAdd)) {\n            const stat = isNaN(+value[attr]) ? 0 : +value[attr];\n            cleanedUpValue[attr] = stat;\n        }\n\n        if (!mergedData.has(cleanedUpValue.Season)) {\n            mergedData.set(cleanedUpValue.Season, cleanedUpValue);\n        } else {\n            const currentStat = mergedData.get(cleanedUpValue.Season);\n            let mergedSeason = {};\n            for (const attr of nanAttributes.concat(attributesToKeep)) {\n                mergedSeason[attr] = cleanedUpValue[attr];\n            }\n\n            for (const attr of attributesToKeepAndAdd) {\n                mergedSeason[attr] = cleanedUpValue[attr] + currentStat[attr];\n            }\n            mergedData.set(cleanedUpValue.Season, mergedSeason);\n        }\n    }\n    return Array.from(mergedData).map(([key, value]) => value);\n}\n\nfunction computeDerivedStats(data) {\n    for (const season of data) {\n        season['GoalsPer90Minutes'] = season['Goals'] / season['MinutesPlayed'] * 90;\n        season['AssistsPer90Minutes'] = season['Assists'] / season['MinutesPlayed'] * 90;\n        season['ShotsOnTargetPer90Minutes'] = season['ShotsOnTarget'] / season['MinutesPlayed'] * 90;\n    }\n    return data;\n}\n\nexport async function getLiguaStats() {\n    const standardStatsFilename = window.location.origin + '/data/standard_stats_la_ligua.csv';\n    const shootingStatsFilename = window.location.origin + '/data/shooting_stats_la_ligua.csv';\n    const passingStatsFilename = window.location.origin + '/data/passing_stats_la_ligua.csv';\n    const standardStats = await d3.csv(standardStatsFilename);\n    const shootingStats = await d3.csv(shootingStatsFilename);\n    const passingStats = await d3.csv(passingStatsFilename);\n\n    const mergedData = [];\n    for (const playerStandardStats of standardStats) {\n        const playerShootingStats = shootingStats.find(element => element.PlayerName === playerStandardStats.PlayerName);\n        const playerPassingStats = passingStats.find(element => element.PlayerName === playerStandardStats.PlayerName);\n        mergedData.push(Object.assign({}, playerStandardStats, playerShootingStats, playerPassingStats));\n    }\n    const topScoringPlayers = getPlayersWithMostGoals(mergedData, 10);\n    cleanPlayerNames(topScoringPlayers);\n    return topScoringPlayers;\n}\n\nexport async function getBenzemaHistoricalStats() {\n    const standardStatsFilename = window.location.origin + '/data/benzema_standard_stats_historical_values.csv';\n    const shootingStatsFilename = window.location.origin + '/data/benzema_shooting_stats_historical_values.csv';\n    const passingStatsFilename = window.location.origin + '/data/benzema_passing_stats_historical_values.csv';\n    const standardStats = await d3.csv(standardStatsFilename);\n    const shootingStats = await d3.csv(shootingStatsFilename);\n    const passingStats = await d3.csv(passingStatsFilename);\n\n    const mergedStats = [];\n    for (let i = 0; i < standardStats.length; i++) {\n        mergedStats.push(Object.assign({}, standardStats[i], shootingStats[i], passingStats[i]))\n    }\n\n    const mergedSeasons = mergeSeasons(mergedStats);\n\n    return computeDerivedStats(mergedSeasons);\n}\n\nexport async function getGiroudHistoricalStats() {\n    const standardStatsFilename = window.location.origin + '/data/giroud_standard_stats_historical_values.csv';\n    const shootingStatsFilename = window.location.origin + '/data/giroud_shooting_stats_historical_values.csv';\n    const passingStatsFilename = window.location.origin + '/data/giroud_passing_stats_historical_values.csv';\n    const standardStats = await d3.csv(standardStatsFilename);\n    const shootingStats = await d3.csv(shootingStatsFilename);\n    const passingStats = await d3.csv(passingStatsFilename);\n\n    const mergedStats = []\n    for (let i = 0; i < standardStats.length; i++) {\n        mergedStats.push(Object.assign({}, standardStats[i], shootingStats[i], passingStats[i]))\n    }\n\n    const mergedSeasons = mergeSeasons(mergedStats);\n\n    return computeDerivedStats(mergedSeasons);\n}\n"]}]}