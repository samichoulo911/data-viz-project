{"remainingRequest":"/home/sam/Documents/Poly/data-viz-project/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/sam/Documents/Poly/data-viz-project/src/Linechart.vue?vue&type=style&index=0&id=13d3407e&lang=css","dependencies":[{"path":"/home/sam/Documents/Poly/data-viz-project/src/Linechart.vue","mtime":1624326781000},{"path":"/home/sam/Documents/Poly/data-viz-project/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sam/Documents/Poly/data-viz-project/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/home/sam/Documents/Poly/data-viz-project/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/sam/Documents/Poly/data-viz-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sam/Documents/Poly/data-viz-project/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICAubGluZWNoYXJ0LWNvbnRhaW5lciB7CiAgICAgICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nOwogICAgICAgIGRpc3BsYXk6IGdyaWQ7CiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczoKICAgICAgICAgICAgImxpbmVjaGFydCBsaW5lY2hhcnQgbGluZWNoYXJ0IGxpbmVjaGFydCBzZWxlY3RvciBzZWxlY3RvciIKICAgICAgICAgICAgImxpbmVjaGFydCBsaW5lY2hhcnQgbGluZWNoYXJ0IGxpbmVjaGFydCBzZWxlY3RvciBzZWxlY3RvciIKICAgICAgICAgICAgImxpbmVjaGFydCBsaW5lY2hhcnQgbGluZWNoYXJ0IGxpbmVjaGFydCBzZWxlY3RvciAgIHNlbGVjdG9yIgogICAgICAgICAgICAibGluZWNoYXJ0IGxpbmVjaGFydCBsaW5lY2hhcnQgbGluZWNoYXJ0IGxlZ2VuZCAgIGxlZ2VuZCI7CiAgICAgICAgd2lkdGg6IDEzMDBweDsKICAgICAgICBtYXJnaW46IGF1dG87CiAgICB9CgogICAgLmxpbmVjaGFydC12aXogewogICAgICAgIGdyaWQtYXJlYTogbGluZWNoYXJ0OwogICAgfQoKICAgIC5zdGF0U2VsZWN0b3IgewogICAgICAgIGdyaWQtYXJlYTogc2VsZWN0b3I7CiAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgIG1hcmdpbjogMDsKICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsKICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgd2lkdGg6IDMzMHB4OwogICAgfQoKICAgIC5saW5lY2hhcnQtbGVnZW5kIHsKICAgICAgICBncmlkLWFyZWE6IGxlZ2VuZDsKICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5OwogICAgfQoKICAgIC5saXN0LWl0ZW0gewogICAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgICB0cmFuc2l0aW9uOiBmb250LXNpemUgMzAwbXM7CiAgICAgICAgaGVpZ2h0OiAyOXB4OwogICAgfQoKICAgIC5zZWxlY3RlZCB7CiAgICAgICAgZm9udC1zaXplOiAyNHB4OwogICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgfQoKICAgIC5saW5lY2hhcnQtcGxheWVyLW5hbWUgewogICAgICAgIGZvbnQtc2l6ZTogMjBweDsKICAgICAgICAvKiB0cmFuc2l0aW9uOiBmb250LXNpemUgMzAwbXM7CiAgICAgICAgdHJhbnNpdGlvbjogbWFyZ2luLXRvcCAzMDBtczsgKi8KICAgICAgICBtYXJnaW4tdG9wOiAzcHg7CiAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgICB9CgogICAgLmxpbmVjaGFydC1sZWdlbmQtY29sb3IgewogICAgICAgIHdpZHRoOiAzMHB4OyBoZWlnaHQ6MzBweDsKICAgICAgICBib3JkZXItcmFkaXVzOiAxNXB4OwogICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lOwogICAgfQoKICAgIC5saW5lY2hhcnQtbGVnZW5kLWl0ZW0tY29udGFpbmVyIHsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGN1cnNvcjogZGVmYXVsdDsKICAgIH0KCg=="},{"version":3,"sources":["/home/sam/Documents/Poly/data-viz-project/src/Linechart.vue"],"names":[],"mappings":"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","file":"/home/sam/Documents/Poly/data-viz-project/src/Linechart.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"linechart-container\">\n        <div class=\"linechart-viz\" id=\"linechart-content\" style=\"font-family: 'Roboto', sans-serif\"></div>\n        <div class=\"statSelector\">\n            <div class=\"list-item\" :class=\"{selected : currentStatName === 'Goals'}\" @click=\"updateData('Goals')\">Goals</div>\n            <div class=\"list-item\" :class=\"{selected : currentStatName === 'MinutesPlayed'}\" @click=\"updateData('MinutesPlayed')\">Minutes Played</div>\n            <div class=\"list-item\" :class=\"{selected : currentStatName === 'Assists'}\" @click=\"updateData('Assists')\">Assists</div>\n            <div class=\"list-item\" :class=\"{selected : currentStatName === 'Shots'}\" @click=\"updateData('Shots')\">Shots</div>\n            <div class=\"list-item\" :class=\"{selected : currentStatName === 'ShotsOnTarget'}\" @click=\"updateData('ShotsOnTarget')\">Shots on Target</div>\n            <div class=\"list-item\" :class=\"{selected : currentStatName === 'YellowCards'}\" @click=\"updateData('YellowCards')\">Yellow Cards</div>\n            <div class=\"list-item\" :class=\"{selected : currentStatName === 'RedCards'}\" @click=\"updateData('RedCards')\">Red Cards</div>\n            <div class=\"list-item\" :class=\"{selected : currentStatName === 'GoalsPer90Minutes'}\" @click=\"updateData('GoalsPer90Minutes')\">Goals per 90 minutes</div>\n            <div class=\"list-item\" :class=\"{selected : currentStatName === 'AssistsPer90Minutes'}\" @click=\"updateData('AssistsPer90Minutes')\">Assists per 90 minutes</div>\n            <div class=\"list-item\" :class=\"{selected : currentStatName === 'ShotsOnTargetPer90Minutes'}\" @click=\"updateData('ShotsOnTargetPer90Minutes')\">Shots on target per 90 minutes</div>\n        </div>\n        <div class=\"linechart-legend\">\n            <div class=\"linechart-legend-item-container\" @mouseenter=\"highlightPlayer('benzema')\" @mouseout=\"removeHighlight('benzema')\">\n                <div class = \"linechart-legend-color\" style=\"background-color: blue;\"></div>\n                <div class=\"linechart-player-name\" id=\"benzema-linechart-legend\">\n                    Karim Benzema\n                </div>\n            </div>\n            <div class=\"linechart-legend-item-container\" @mouseenter=\"highlightPlayer('giroud')\" @mouseout=\"removeHighlight('giroud')\">\n                <div class = \"linechart-legend-color\" style=\"background-color: red;\"></div>\n                <div class=\"linechart-player-name\" id=\"giroud-linechart-legend\">\n                    Olivier Giroud\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted, ref } from 'vue';\nimport * as d3 from 'd3';\nimport d3Tip from 'd3-tip';\nimport { getBenzemaHistoricalStats, getGiroudHistoricalStats } from './preprocess.js';\nexport default defineComponent({\n    name: 'Linechart',\n    setup() {\n        const size = { width: 920, height: 500 };\n        const margin = { left: 40, right: 10, top: 10, bottom: 60 };\n        const transitionTime = 400;\n\n        let svgRoot;\n        let toolTip;\n        let benzemaData = [];\n        let giroudData = [];\n        let xScale;\n        let yScale;\n        let xAxis;\n        let yAxis;\n        let currentStatName = ref(\"Goals\");\n\n        function createSvg() {\n            d3.select('#linechart-content')\n                    .append('svg')\n                    .attr('width', size.width + margin.left + margin.right)\n                    .attr('height', size.height + margin.top + margin.bottom)\n                .append('g')\n                    .attr('transform', `translate(${margin.left}, ${margin.top})`)\n                    .attr('id', 'content-g');\n        }\n\n        function rotateLabels(svgRoot) {\n            svgRoot.selectAll('.tick')\n                .select('text')\n                .attr('transform', 'rotate(45)')\n                .attr('font-size', '12px')\n                .style('text-anchor', 'start');\n        }\n\n        function drawPath(svgRoot, data, yVar, color, playerName) {\n            svgRoot.select('#content-g')\n                .append('path')\n                .attr('class', `dataLine-${playerName}`)\n                .datum(data)\n                .attr('fill', 'none')\n                .attr('stroke', color)\n                .attr('stroke-width', 1.5)\n                .attr('d', d3.line().x(element => xScale(element.Season)).y(element => yScale(element[yVar])));\n        }\n\n        function updatePathAndCircles(data, playerName, statName) {\n            const u = svgRoot.selectAll(`.dataLine-${playerName}`)\n                .data([data], (element) => element.Season);\n\n            u.enter().append('path')\n                .merge(u)\n                .transition()\n                .duration(transitionTime)\n                .attr('d', d3.line().x(element => xScale(element.Season)).y(element => yScale(element[statName])));\n\n            svgRoot.select('#content-g')\n                .selectAll(`.circles-${playerName}`)\n                .data(data)\n                .transition()\n                .duration(transitionTime)\n                .attr('cy', element => yScale(element[statName]))\n                // .on('mouseover', (event, value) => toolTip.show(value, event.target))\n                // .on('mouseout', (event, value) => toolTip.hide(value, event.target));\n        }\n\n        function createXScale(benzemaData, giroudData, graphDimensions) {\n            const range = [];\n            const domain = Array.from(new Set(benzemaData.map(element => element.Season).concat(giroudData.map(element => element.Season)))).sort();\n            for (let i = 0; i < domain.length; i++) {\n                range.push(i * graphDimensions.width / domain.length)\n            }\n\n            xScale = d3.scaleOrdinal();\n            xScale.domain(domain).range(range);\n        }\n\n        function createYScale(benzemaData, giroudData, graphDimensions, yVar) {\n            const max = Math.max(...benzemaData.map(element => element[yVar]), ...giroudData.map(element => element[yVar]));\n            yScale = d3.scaleLinear();\n            yScale.domain([0, max]).range([graphDimensions.height, 0]);\n        }\n\n        function drawCircles(svgRoot, data, yVar, color, playerName, toolTip) {\n            svgRoot.select('#content-g')\n                .selectAll(`.circles-${playerName}`)\n                .data(data)\n                .join('circle')\n                .attr('class', `circles-${playerName}`)\n                .attr('fill', color)\n                .attr('stroke', 'none')\n                .attr('cx', element => xScale(element.Season))\n                .attr('cy', element => yScale(element[yVar]))\n                .attr('r', 5)\n                .on('mouseover', (event, value) => toolTip.show(value, event.target))\n                .on('mouseout', (event, value) => toolTip.hide(value, event.target));\n        }\n\n        function addAxesGroups(svgRoot, graphDimensions) {\n            svgRoot.select('#content-g')\n                .append('g')\n                .attr('class', 'xAxis')\n                .attr('transform', `translate(0 ${graphDimensions.height})`);\n\n            svgRoot.select('#content-g')\n                .append('g')\n                .attr('class', 'yAxis');\n        }\n\n        function drawXAxis(svgRoot, graphDimensions) {\n            xAxis = d3.axisBottom(xScale);\n            svgRoot.select('.xAxis').call(xAxis);\n        }\n\n        function drawYAxis(svgRoot, transitionTime) {\n            yAxis = d3.axisLeft(yScale).ticks(5)\n            svgRoot.select('.yAxis').transition().duration(transitionTime).call(yAxis);\n        }\n\n        function updateData(statName) {\n            createYScale(benzemaData, giroudData, size, statName);\n            drawYAxis(svgRoot, transitionTime);\n            updatePathAndCircles(benzemaData, 'benzema', statName);\n            updatePathAndCircles(giroudData, 'giroud', statName);\n            currentStatName.value = statName;\n        }\n\n        function highlightPlayer(playerName) {\n            d3.selectAll(`.dataLine-${playerName}`)\n                .transition()\n                .duration(300)\n                .attr('stroke-width', 4)\n\n            d3.selectAll(`.circles-${playerName}`)\n                .transition()\n                .duration(300)\n                .attr('r', 8)\n\n            d3.select(`#${playerName}-linechart-legend`)\n                .transition()\n                .duration(300)\n                .style('margin-top', '2px')\n                .style('font-size', '22px');\n        }\n\n        function removeHighlight(playerName) {\n            d3.selectAll(`.dataLine-${playerName}`)\n                .transition()\n                .duration(300)\n                .attr('stroke-width', 1.5)\n\n            d3.selectAll(`.circles-${playerName}`)\n                .transition()\n                .duration(300)\n                .attr('r', 5)\n\n            d3.select(`#${playerName}-linechart-legend`)\n                .transition()\n                .duration(300)\n                .style('margin-top', '3px')\n                .style('font-size', '20px');\n        }\n\n        function getTooltipContent(element) {\n            return `<div style=\"font-family: 'Roboto', sans-serif\">\n            <span>${element[currentStatName.value]}</span>`;\n        }\n\n        onMounted(async () => {\n            createSvg();\n            svgRoot = d3.select(`#linechart-content`);\n            toolTip = d3Tip().attr('class', 'd3-tip').html(getTooltipContent);\n            svgRoot.call(toolTip);\n\n            benzemaData = await getBenzemaHistoricalStats();\n            giroudData = await getGiroudHistoricalStats();\n            // console.log(benzemaData)\n            // console.log(giroudData)\n            createXScale(benzemaData, giroudData, size);\n            createYScale(benzemaData, giroudData, size, currentStatName.value);\n\n            addAxesGroups(svgRoot, size);\n            drawXAxis(svgRoot, size);\n            rotateLabels(svgRoot);\n            drawYAxis(svgRoot, size, 0);\n\n            drawPath(svgRoot, giroudData, currentStatName.value, 'red', 'giroud');\n            drawCircles(svgRoot, giroudData, currentStatName.value, 'red', 'giroud', toolTip);\n\n            drawPath(svgRoot, benzemaData, currentStatName.value, 'blue', 'benzema');\n            drawCircles(svgRoot, benzemaData, currentStatName.value, 'blue', 'benzema', toolTip);\n        });\n\n        return {\n            updateData,\n            highlightPlayer,\n            removeHighlight,\n            currentStatName,\n        };\n    },\n})\n</script>\n\n<style>\n    .linechart-container {\n        font-family: 'Roboto';\n        display: grid;\n        grid-template-areas:\n            \"linechart linechart linechart linechart selector selector\"\n            \"linechart linechart linechart linechart selector selector\"\n            \"linechart linechart linechart linechart selector   selector\"\n            \"linechart linechart linechart linechart legend   legend\";\n        width: 1300px;\n        margin: auto;\n    }\n\n    .linechart-viz {\n        grid-area: linechart;\n    }\n\n    .statSelector {\n        grid-area: selector;\n        font-size: 20px;\n        margin: 0;\n        padding: 0;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n        height: 100%;\n        width: 330px;\n    }\n\n    .linechart-legend {\n        grid-area: legend;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-evenly;\n    }\n\n    .list-item {\n        cursor: pointer;\n        transition: font-size 300ms;\n        height: 29px;\n    }\n\n    .selected {\n        font-size: 24px;\n        font-weight: bold;\n    }\n\n    .linechart-player-name {\n        font-size: 20px;\n        /* transition: font-size 300ms;\n        transition: margin-top 300ms; */\n        margin-top: 3px;\n        margin-left: 10px;\n        pointer-events: none;\n    }\n\n    .linechart-legend-color {\n        width: 30px; height:30px;\n        border-radius: 15px;\n        pointer-events: none;\n    }\n\n    .linechart-legend-item-container {\n        display: flex;\n        cursor: default;\n    }\n\n</style>\n"]}]}